#!/usr/bin/env bash

# https://github.com/mauriciojost/mavarduino
#
# Mavarduino Version Bumper
# 
# Control Version Bumps and ease the flow for creating them.
#

export BUMP=${1:-PATCH} # can be MAJOR, MINOR or PATCH

function inc() {
  local i=$1
  echo `echo $i + 1 | bc`
}


echo "### Parsing current version ..."
export VERSION=`cat library.json |  jq  .version | sed 's/"//g'`
export MAJOR=`echo $VERSION | awk -F'[.-]' '{printf $1}'`
export MINOR=`echo $VERSION | awk -F'[.-]' '{printf $2}'`
export PATCH=`echo $VERSION | awk -F'[.-]' '{printf $3}'`

echo "### Computing new version ..."
if [ "$BUMP" == "MAJOR" ]
then
  export NEW_MAJOR=`inc $MAJOR`
  export NEW_MINOR=0
  export NEW_PATCH=0
elif [ "$BUMP" == "MINOR" ]
then
  export NEW_MAJOR=$MAJOR
  export NEW_MINOR=`inc $MINOR`
  export NEW_PATCH=0
elif [ "$BUMP" == "PATCH" ]
then
  export NEW_MAJOR=$MAJOR
  export NEW_MINOR=$MINOR
  export NEW_PATCH=`inc $PATCH`
fi

export NEW_VERSION="$NEW_MAJOR.$NEW_MINOR.$NEW_PATCH"

echo "### Creating commit and tags for new version: $NEW_VERSION ..."
sed -i "s/$VERSION-SNAPSHOT/$NEW_VERSION/g" library.json 
sed -i "s/$VERSION/$NEW_VERSION/g" library.json 
git add library.json
git commit -s -m "Bump to $NEW_VERSION"
git tag "$NEW_VERSION" -m "$NEW_VERSION"

echo "### Creating commit new version snapshot: $NEW_VERSION-SNAPSHOT ..."
sed -i "s/$NEW_VERSION/$NEW_VERSION-SNAPSHOT/g" library.json 
git add library.json
git commit -s -m "Bump to $NEW_VERSION"

echo "### Pushing to git..."
git push 
git push --tags

echo "### Done."

